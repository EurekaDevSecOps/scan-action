name: "Eureka DevSecOps GitHub Action"
description: "Scan your code with Eureka DevSecOps to discover potential security risks and vulnerabilities"
inputs:
  enable_github_advanced_security:
    description: "Enable SARIF scan results to be uploaded to Github Advanced Security. This requires the repository to have GitHub Code Scanning enabled."
    required: false
    default: "false"
  eureka_scan_root:
    description: "Provide a custom scan root directory. Defaults to the GitHub workspace"
    required: true
    default: ""
  custom_eureka_vdbe_url:
    description: "Provide a custom Eureka DevSecOps Vulnerability Database URL. Defaults to the public Eureka DevSecOps database"
    required: false
    default: "https://vulns.eurekadevsecops.com"
  tag:
    description: "Provide a specific tag for the Eureka DevSecOps Agent. Defaults to latest."
    required: false
    default: "latest"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: docker/login-action@v3
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull down Eureka DevSecOps Agent
      shell: bash
      run: |
        docker pull ghcr.io/eurekadevsecops/eureka-agent:${{ inputs.tag }}

    - name: Run Eureka DevSecOps scan
      shell: bash
      run: |
        docker run --rm --network host \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v "${EUREKA_SCAN_ROOT}":/home/repo \
          -v eureka-agent:/app/eureka-agent \
          -e EUREKA_SCAN_ROOT="${{ inputs.scan_root || github.workspace }}" \
          -e EUREKA_AGENT_TOKEN="${EUREKA_AGENT_TOKEN}" \
          -e EUREKA_PROFILE_ID="${EUREKA_PROFILE_ID}" \
          -e EUREKA_VULNS_URI="${{ inputs.custom_eureka_vdbe_url }}" \
          ghcr.io/eurekadevsecops/eureka-agent:${{ inputs.tag }}

    - name: Upload SARIF report to GitHub Advanced Security
      if: ${{ inputs.enable_github_advanced_security == 'true' && always() }}
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: report.sarif
        fail_on_error: false