# ---------------------------------------------------------------------------
#  🛡️ The Official Multi-Scanner GitHub Action for Eureka Radar CLI
#
#  Run automated AppSec scans in your CI/CD pipeline with Radar CLI by Eureka.
#  This GitHub Action unifies all your AppSec scanners — code, dependencies,
#  and secrets — into one command and produces a unified SARIF report for
#  GitHub Advanced Security or Eureka ASPM. Upload findings when you need
#  centralized tracking, or run locally with telemetry off for privacy.
#  Eureka Radar helps development teams continuously identify and manage
#  vulnerabilities. One action. Complete coverage.
#
#  ✅ Features:
#    - Run one or more scanners (Opengrep, Gitleaks, Grype, Dep-Scan, etc)
#    - Generate a single SARIF report for all findings
#    - Optionally upload findings to:
#        • GitHub Advanced Security (GHAS)
#        • Eureka ASPM for centralized vulnerability management
#    - Telemetry is disabled by default unless credentials are provided
#
#  📘 Full documentation:
#      https://github.com/eurekadevsecops/scan-action#readme
#
#  Example 1 — Local Scan (no uploads)
#  -----------------------------------------------------------
#  - uses: eurekadevsecops/scan-action@v1
#    with:
#      scanners: "opengrep,gitleaks,grype"
#
#  Example 2 — Upload Findings to Eureka ASPM
#  -----------------------------------------------------------
#  - uses: eurekadevsecops/scan-action@v1
#    with:
#      scanners: "opengrep,gitleaks,grype"
#      token: ${{ secrets.EUREKA_AGENT_TOKEN }}
#      profile: "prod-backend"
#
#  Example 3 — Upload Findings to Eureka ASPM and GHAS
#  -----------------------------------------------------------
#  - uses: eurekadevsecops/scan-action@v1
#    with:
#      scanners: "opengrep,gitleaks,grype"
#      token: ${{ secrets.EUREKA_AGENT_TOKEN }}
#      profile: "prod-backend"
#      export_findings_to_ghas: "true"
#
#  Inputs:
#    folder_to_scan           Directory to scan (default: ${{ github.workspace }})
#    scanners                 Comma-separated list of scanners (default: "all")
#    export_findings_to_ghas  Upload SARIF results to GHAS (default: "false")
#    token                    Eureka agent token (optional)
#    profile                  Eureka profile name (optional)
#
#  📤 Output:
#    report                   Consolidated SARIF report (string)
#
#  🪪 License:
#    MIT © Eureka DevSecOps  |  https://eurekadevsecops.com
# ---------------------------------------------------------------------------

name: "The Official Multi-Scanner GitHub Action for Eureka Radar CLI"
description: "Run multi-scanner AppSec scans in CI/CD with Radar CLI by Eureka. Generate consolidated SARIF results and optionally upload to GitHub Advanced Security or Eureka ASPM."

branding:
  icon: "shield"
  color: "blue"

inputs:
  folder_to_scan:
    description: "Provide a custom scan root directory. Defaults to the root of your GitHub repository."
    required: false
    default: "${{ github.workspace }}"

  scanners:
    description: "Comma-separated list of scanners to use. Example: 'opengrep,gitleaks,grype,depscan'. Defaults to 'all' if not given."
    required: false
    default: "all"

  export_findings_to_ghas:
    description: "Upload findings to Github Advanced Security. This requires your repository to have GitHub Code Scanning enabled."
    required: false
    default: "false"

  token:
    description: "Optional Eureka ASPM auth token, used to upload findings to the Eureka ASPM platform. Can be left out if you don't want to upload findings to Eureka ASPM."
    required: false
    default: ""

  profile:
    description: "Optional Eureka ASPM profile, used to associate findings to a specific profile in the Eureka ASPM platform."
    required: false
    default: ""

outputs:
  report:
    description: 'Report with consolidated findings from all scanners run by Radar CLI. Report is in SARIF format.'
    value: ${{ steps.set-report-output.outputs.report }}

runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Node.js and NPM
      uses: actions/setup-node@v4
      with:
        node-version: "22"

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> "$GITHUB_OUTPUT"

    - name: Cache npm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-npm-radar-cache-v1
        restore-keys: |
          ${{ runner.os }}-npm-radar-cache-

    - name: Install Radar CLI
      shell: bash
      run: npm i -g @eurekadevsecops/radar

    - name: Verify Radar CLI install
      env:
        SCANNERS: ${{ inputs.scanners }}
        TARGET: ${{ inputs.folder_to_scan }}
      shell: bash
      run: |
        radar
        echo 'Available scanners:'
        radar scanners
        echo ''
        echo 'Selected scanners:'
        echo -e '$SCANNERS'
        echo ''
        echo 'Folder to scan:'
        echo -e "$TARGET"
        echo ''

    - name: Run Radar CLI scan
      env:
        TARGET: ${{ inputs.folder_to_scan }}
        SCANNERS: ${{ inputs.scanners }}
        EUREKA_AGENT_TOKEN: ${{ inputs.token }}
        EUREKA_PROFILE: ${{ inputs.profile }}
      shell: bash
      run: radar scan -s "$SCANNERS" -o report.sarif "$TARGET"

    - name: Set report output
      id: set-report-output
      if: ${{ always() }}
      shell: bash
      run: |
        echo "report<<EOF|:|EOF" >> $GITHUB_OUTPUT
        echo "$(cat report.sarif)" >> $GITHUB_OUTPUT
        echo "EOF|:|EOF" >> $GITHUB_OUTPUT

    - name: Upload report to GitHub Advanced Security
      if: ${{ inputs.export_findings_to_ghas == 'true' && always() }}
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: report.sarif
        fail_on_error: true
